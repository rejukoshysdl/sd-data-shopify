name: Compare JSON, Extract IDs, and Convert JSON to Excel

on:
  push:
    branches:
      - int  # ✅ Runs when a new commit is pushed to `int`
      - main  # ✅ Runs when a new commit is pushed to `main`

jobs:
  # **STEP 1: Compare `int` vs `main`**
  diff_check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch Latest Branches
        run: |
          git fetch origin main  # Fetch latest `main`
          git fetch origin int  # Fetch latest `int`

      - name: Create Diff Directory
        run: |
          mkdir -p ./changes/git-diff

      - name: Compare JSON Files in repo-shopify-data (int vs main)
        run: |
          DIFF_FILE="./changes/git-diff/changes.diff"
          git diff origin/main..origin/int -- 'repo-shopify-data/*.json' > $DIFF_FILE

          if [ ! -s $DIFF_FILE ]; then
            echo "✅ No JSON files changed between `int` and `main`" > $DIFF_FILE
          fi

          cat $DIFF_FILE  # Debugging: Show diff output

      - name: Commit and Push Diff File to `int`
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          git add ./changes/git-diff/changes.diff
          git status  # Debugging: Show Git status

          git pull --rebase origin int || echo "⚠️ Warning: Pull failed, continuing..."

          if git diff --cached --quiet; then
            echo "✅ No new changes detected. Skipping commit."
          else
            git commit -m "Update changes.diff with JSON file differences after merging into int"
            git push origin int || echo "⚠️ Warning: Git push failed. Check permissions."
          fi

  # **STEP 2: Extract Changed IDs from JSON Diff**
  extract_ids:
    runs-on: ubuntu-latest
    needs: diff_check  # ✅ Ensures `diff_check` runs first
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install Dependencies
        run: |
          python3 -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip

      - name: Run Extract ID Script
        run: |
          source venv/bin/activate
          python ./utils/extractIdByPage.py  # ✅ Runs the script in remote GitHub folders

      - name: Commit and Push Extracted IDs
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          git add ./changes/id-output/changed_ids.txt
          git status  # Debugging: Show Git status

          git pull --rebase origin int || echo "⚠️ Warning: Pull failed, continuing..."

          if git diff --cached --quiet; then
            echo "✅ No new changes detected. Skipping commit."
          else
            git commit -m "Add extracted changed IDs"
            git push origin int || echo "⚠️ Warning: Git push failed. Check permissions."
          fi

  # **STEP 3: Convert JSON to Excel**
  run-conversion-and-push:
    runs-on: ubuntu-latest
    needs: extract_ids  # ✅ Ensures `extract_ids` runs first
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Git user info
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python3 -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install pandas openpyxl xlsxwriter

      - name: Run convertJSONToExcel script
        run: |
          source venv/bin/activate
          python ./utils/convertJSONToExcel_in_git.py

      - name: Commit and Push Excel File
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          git add final-matrixify-export/*.xlsx
          git status  # Debugging: Show Git status

          git pull --rebase origin int || echo "⚠️ Warning: Pull failed, continuing..."

          if git diff --cached --quiet; then
            echo "✅ No new changes detected. Skipping commit."
          else
            git commit -m "Add Excel file export"
            git push origin int || (echo "❌ Push failed. Retrying with force push..." && git push origin int --force)
